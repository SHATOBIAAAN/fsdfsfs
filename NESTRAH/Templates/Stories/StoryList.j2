{% extends "base/base.j2" %}


{% block head %}
    <link rel="stylesheet" href="{{ static('css/FormContainer.css') }}">
    <link rel="stylesheet" href="{{ static('css/StoryList.css') }}">
    <link rel="stylesheet" href="{{ static('css/NewStory.css') }}">
    <link rel="stylesheet" href="{{ static('css/Base.css') }}">
    <link rel="stylesheet" href="{{ static('css/MainPage.css') }}">
    <style>
        .media-link {
            color: #7bed64;
            text-decoration: none;
            position: relative;
            transition: color 0.3s;
        }
        
        .media-link:hover {
            color: #4ec93f;
            text-decoration: underline;
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Ç—Ä–µ–ª–æ–∫ */
        .nav-button {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            background: rgba(0, 0, 0, 0.5);
            color: white;
            border: none;
            border-radius: 50%;
            width: 32px;
            height: 32px;
            font-size: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            z-index: 10;
            -webkit-appearance: none;
            -webkit-tap-highlight-color: transparent;
            transition: background-color 0.3s, opacity 0.3s;
            padding: 0;
            line-height: 1;
        }

        .nav-button::before {
            position: relative;
            top: -1px;
        }

        .nav-button.prev::before {
            content: '‚ùÆ';
        }

        .nav-button.next::before {
            content: '‚ùØ';
        }

        .nav-button.prev {
            left: 10px;
        }

        .nav-button.next {
            right: 10px;
        }

        .nav-button:active {
            background: rgba(0, 0, 0, 0.7);
        }

        /* –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è iOS */
        @supports (-webkit-touch-callout: none) {
            .nav-button {
                padding: 0;
                margin: 0;
                display: grid;
                place-items: center;
            }
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */
        @media (max-width: 768px) {
            .nav-button {
                width: 28px;
                height: 28px;
                font-size: 14px;
            }
        }
    </style>
{% endblock %}

{% block content %}
    <!-- –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ -->
    <div class="notification-popup" id="moderationNotification">
        <div class="notification-icon">‚úì</div>
        <div class="notification-content">
            <div class="notification-title">–ò—Å—Ç–æ—Ä–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é</div>
            <div class="notification-message">–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</div>
            <div class="notification-click-hint">–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ—Ñ–∏–ª—å</div>
        </div>
        <div class="notification-close" id="closeNotification">&times;</div>
    </div>
    
    <div class="main-info">
        <div class="main-info-text">
        <h1 class="main-title">–õ–ï–ù–¢–ê –°–õ–£–ß–ê–ï–í</h1>
        <p class="main-description">–ó–¥–µ—Å—å —Å–æ–±—Ä–∞–Ω—ã —Å–∞–º—ã–µ –¥–∏–∫–∏–µ,  –Ω–µ–ª–µ–ø—ã–µ –∏ —Å–º–µ—à–µ–Ω—ã–µ
–∏—Å—Ç–æ—Ä–∏–∏. –ß–∏—Ç–∞–π, –≥–æ–ª–æ—Å—É–π –∏ –Ω–µ  –∑–∞–±—ã–≤–∞–π, —á—Ç–æ –≤ —Å–ª–µ–¥—É—â–∏–π
—Ä–∞–∑ –Ω–µ—É–¥–∞—á–∞ –º–æ–∂–µ—Ç –Ω–∞—Å—Ç–∏–≥–Ω—É—Ç—å —Ç–µ–±—è üòâ!</p>
        </div>
       <div class="filter-container">
            <div class="filter-header">
                <div class="filter-item" id="sortFilter">
                    <span class="filter-label">
                        {% if current_sort == 'new' %}
                            –ù–æ–≤—ã–µ
                        {% elif current_sort == 'popular' %}
                            –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ
                        {% elif current_sort == 'liked' %}
                            –ü–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è
                        {% elif current_sort == 'old' %}
                            –°—Ç–∞—Ä—ã–µ
                        {% else %}
                            –§–∏–ª—å—Ç—Ä—ã
                        {% endif %}
                    </span>
                    <div class="filter-dropdown">
                        <ul class="filter-list">
                            <li class="filter-option {% if current_sort == 'new' %}selected{% endif %}" data-value="new">–ù–æ–≤—ã–µ</li>
                            <li class="filter-option {% if current_sort == 'old' %}selected{% endif %}" data-value="old">–°—Ç–∞—Ä—ã–µ</li>
                            <li class="filter-option {% if current_sort == 'popular' %}selected{% endif %}" data-value="popular">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ</li>
                            <li class="filter-option {% if current_sort == 'liked' %}selected{% endif %}" data-value="liked">–ü–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è</li>
                        </ul>
                    </div>
                </div>
                
                <div class="filter-item" id="multiCategoryToggle">
                    <span class="filter-label">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</span>
                </div>
            </div>
            
            <!-- –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π -->
            <div class="category-area" id="categoryArea">
                <div class="category-content">
                    <button class="close-category-area" id="closeCategoryArea">&times;</button>
                    <div class="category-header">
                        <h3 class="category-title">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</h3>
                    </div>
                    <input type="text" class="category-search-box" id="categorySearch" placeholder="–ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...">
                    <div class="category-list-container">
                        <ul class="category-list" id="categoryList">
                            {% for category in categories %}
                            <li class="category-item" data-id="{{ category.id }}" data-name="{{ category.name }}">{{ category.name }}</li>
                            {% endfor %}
                        </ul>
                    </div>
                    <div class="category-selected-display" id="categorySelectedDisplay">
                        <span class="no-category-selected">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã</span>
                    </div>
                    <div class="category-actions">
                        <button type="button" class="apply-category" id="applyCategoryBtn">–ü—Ä–∏–º–µ–Ω–∏—Ç—å</button>
                    </div>
                </div>
            </div>
            
            <div class="categories-filter-container" id="activeFiltersContainer">
                <div class="active-filters" id="activeFilters"></div>
            </div>
            
            <input type="hidden" id="selectedSort" name="sort" value="{{ current_sort|default('new') }}">
            <input type="hidden" id="selectedCategories" name="categories" value="{{ current_categories|default('') }}">
            
            <div class="container">
                <!-- –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤–Ω–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏—Å—Ç–æ—Ä–∏–π) -->
                {% if page_obj and page_obj|length > 1 %}
                <button class="nav-button prev" id="prevSlide" aria-label="–ü—Ä–µ–¥—ã–¥—É—â–∏–π —Å–ª–∞–π–¥"></button>
                <button class="nav-button next" id="nextSlide" aria-label="–°–ª–µ–¥—É—é—â–∏–π —Å–ª–∞–π–¥"></button>
                {% endif %}
                
                <div class="story-slider-container">
                    <div class="story-slider" id="storySlider">
                        {% if page_obj %}
                            {% for story in page_obj %}
                            <div class="story-slide">
                                <div class="container-story" data-story-id="{{ story.id }}">
                                    <div class="container-story-name">
                                        <h1>{{ story.title }}</h1>
                                    </div>
                                     <div class="container-story-name-text">
                                        <p>{{ story.content|truncate(300) }}</p>
                                    </div>
                                    <div class="story-footer">
                                        <div class="story-info">
                                            <span class="story-author"><p class="story-info-text-green">–ê–≤—Ç–æ—Ä:</p>{% if story.user.profile.nickname|length > 15 %}{{ story.user.profile.nickname[:15] }}...{% else %}{{ story.user.profile.nickname }}{% endif %}</span>
                                            <span class="story-author">
                                                <p class="story-info-text-green">–ú–µ–¥–∏–∞:</p>
                                                {% if story.media_files.exists() %}
                                                <a href="{{ url('story_media', story.id) }}" class="media-link">–û—Ç–∫—Ä—ã—Ç—å</a>
                                                {% else %}
                                                –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
                                                {% endif %}
                                            </span>
                                            <span class="story-author"><p class="story-info-text-green">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</p>
                                                {% if story.categories.exists() %}
                                                    {% for category in story.categories.all() %}
                                                        <span class="story-category-tag">{{ category.name }}</span>
                                                    {% endfor %}
                                                {% elif story.category %}
                                                    {{ story.category.name }}
                                                {% else %}
                                                    –ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                                                {% endif %}
                                            </span>
                                            <span class="story-author"><p class="story-info-text-green">–î–∞—Ç–∞:</p>{{ story.created_at.strftime('%d.%m.%Y') }}</span>
                                        </div>
                                        <div class="story-stats-container">
                                        <div class="story-stats comment-stats" data-story-id="{{ story.id }}">
                                            <span class="stats-count">{{ story.comments.count() }}</span>
                                            <span class="comment-icon">üí¨</span>
                                        </div>
                                        <div class="story-stats like-stats" data-story-id="{{ story.id }}">
                                            <span class="stats-count">{{ story.likes.count() }}</span>
                                            <span class="like-icon {% if request.user.is_authenticated and request.user in story.likes.all() %}active{% endif %}">üëç</span>
                                        </div>
                                        <div class="story-stats dislike-stats" data-story-id="{{ story.id }}">
                                            <span class="stats-count">{{ story.dislikes.count() }}</span>
                                            <span class="dislike-icon {% if request.user.is_authenticated and request.user in story.dislikes.all() %}active{% endif %}">üëé</span>
                                        </div>
                                        </div>
                                    </div>
                                    <div class="story-read-more"><a href="/stories/{{ story.id }}/" class="read-more">–ß–∏—Ç–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é</a></div>
                                </div>
                            </div>
                            {% endfor %}
                        {% else %}
                            <div class="story-slide">
                                <div class="container-story">
                                    <div class="empty-state">
                                        <h2>–ò—Å—Ç–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h2>
                                        <p>–ü–æ–∫–∞ –∑–¥–µ—Å—å –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–π. –í—ã –º–æ–∂–µ—Ç–µ –±—ã—Ç—å –ø–µ—Ä–≤—ã–º, –∫—Ç–æ –ø–æ–¥–µ–ª–∏—Ç—Å—è —Å–≤–æ–µ–π –∏—Å—Ç–æ—Ä–∏–µ–π!</p>
                                    </div>
                                </div>
                            </div>
                        {% endif %}
                    </div>
                </div>
                {% if page_obj and page_obj|length > 0 %}
            <div class="slide-counter-container">
                <div class="slide-counter">
                    <span class="counter-current editable-number" id="currentSlide" contenteditable="true" 
                         title="–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Å–ª–∞–π–¥–∞" role="textbox" aria-label="–ù–æ–º–µ—Ä —Å–ª–∞–π–¥–∞">1</span>
                    <span class="counter-separator">/</span>
                    <span class="counter-total">{{ page_obj|length }}</span>
                    <div class="progress-bar" id="slideProgress"></div>
                </div>
                
                <div class="pagination-info">
                    –°—Ç—Ä–∞–Ω–∏—Ü–∞ <span class="current editable-number" id="currentPage" contenteditable="true" 
                         title="–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã" role="textbox" aria-label="–ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã">{{ current_page }}</span> –∏–∑ {{ total_pages }}
                </div>
            </div>
            {% endif %}
                    </div>
                    
       </div>
    </div>
    
    <script>
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ –±—Ä–∞—É–∑–µ—Ä passive event listeners
        let passiveSupported = false;
        try {
          const options = {
            get passive() {
              passiveSupported = true;
              return true;
            }
          };
          window.addEventListener("test", null, options);
          window.removeEventListener("test", null, options);
        } catch(err) {
          passiveSupported = false;
        }
        
        // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å–æ–±—ã—Ç–∏–π
        const passiveEventOptions = passiveSupported ? { passive: true } : false;
        
        document.addEventListener('DOMContentLoaded', function() {
            // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –∫–ª–∞–≤–∏—à–∏ Tab –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Tab') {
                    e.preventDefault();
                }
            });
            
            // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
            const sortFilter = document.getElementById('sortFilter');
            const selectedSortInput = document.getElementById('selectedSort');
            
            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
            function toggleDropdown(filterItem) {
                const dropdown = filterItem.querySelector('.filter-dropdown');
                const isOpen = dropdown.classList.contains('visible');
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –≤—ã–ø–∞–¥–∞—é—â–∏–µ —Å–ø–∏—Å–∫–∏
                document.querySelectorAll('.filter-dropdown.visible').forEach(el => {
                    if (el !== dropdown) {
                        el.classList.remove('visible');
                    }
                });
                
                // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
                dropdown.classList.toggle('visible');
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤ –Ω–∞ —Ñ–∏–ª—å—Ç—Ä—ã
            sortFilter.addEventListener('click', function() {
                toggleDropdown(this);
            });
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –æ–ø—Ü–∏–∏ –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º —Å–ø–∏—Å–∫–µ
            document.querySelectorAll('.filter-option').forEach(option => {
                option.addEventListener('click', function() {
                    const value = this.dataset.value;
                    const filterItem = this.closest('.filter-item');
                    const filterLabel = filterItem.querySelector('.filter-label');
                    const dropdown = filterItem.querySelector('.filter-dropdown');
                    
                    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π —Ñ–∏–ª—å—Ç—Ä –±—ã–ª –≤—ã–±—Ä–∞–Ω
                    if (filterItem.id === 'sortFilter') {
                        selectedSortInput.value = value;
                        filterLabel.textContent = this.textContent;
                    }
                    
                    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
                    dropdown.classList.remove('visible');
                    
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
                    applyFilters();
                });
            });
            
            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ (–æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞)
            function applyFilters() {
                const sort = selectedSortInput.value;
                
                // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL
                const urlParams = new URLSearchParams(window.location.search);
                const params = [];
                
                // –ü—Ä–∏ —Å–º–µ–Ω–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≤—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã,
                // —Ç–∞–∫ –∫–∞–∫ –Ω–∞–±–æ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é –º–µ–Ω—è–µ—Ç—Å—è
                // –ù–ï —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ —Å–º–µ–Ω–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
                
                // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
                if (sort && sort !== 'new') {
                    params.push(`sort=${sort}`);
                }
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä categories, –µ—Å–ª–∏ –æ–Ω —É–∂–µ –±—ã–ª –≤ URL
                const categoriesParam = urlParams.get('categories');
                if (categoriesParam) {
                    params.push(`categories=${categoriesParam}`);
                }
                
                // –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
                let url = window.location.pathname;
                if (params.length > 0) {
                    url += '?' + params.join('&');
                }
                
                // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –Ω–æ–≤—ã–π URL
                window.location.href = url;
            }
            
            // –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –Ω–∏—Ö
            document.addEventListener('click', function(event) {
                if (!event.target.closest('.filter-item')) {
                    document.querySelectorAll('.filter-dropdown').forEach(dropdown => {
                        dropdown.classList.remove('visible');
                    });
                }
            });
            
            // –°–ª–∞–π–¥–µ—Ä –¥–ª—è –∏—Å—Ç–æ—Ä–∏–π
            const slider = document.getElementById('storySlider');
            const slides = document.querySelectorAll('.story-slide');
            const prevButton = document.getElementById('prevSlide');
            const nextButton = document.getElementById('nextSlide');
            
            // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞
                let currentIndex = 0;
            let isAnimating = false;
            let totalSlides = slides.length;

            // –û–±—ä—è–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é showSlide –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
            window.showSlide = function(index) {
                    // –ï—Å–ª–∏ –∞–Ω–∏–º–∞—Ü–∏—è —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
                    if (isAnimating) return;
                    isAnimating = true;
                    
                    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å—á–µ—Ç—á–∏–∫–∞
                    const direction = index > currentIndex ? 'down' : 'up';
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                    if (index < 0) {
                        // –ï—Å–ª–∏ –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥, –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
                        goToPrevPage();
                        isAnimating = false;
                        return;
                    } else if (index >= totalSlides) {
                        // –ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–ª–∞–π–¥, –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
                        goToNextPage();
                        isAnimating = false;
                        return;
                    }
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å
                    currentIndex = index;
                    
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Å–ª–∞–π–¥–∞
                    saveSlidePosition(currentIndex);
                    
                    // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å active —É –≤—Å–µ—Ö —Å–ª–∞–π–¥–æ–≤
                    slides.forEach(slide => {
                        slide.classList.remove('active');
                    });
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å active –∫ —Ç–µ–∫—É—â–µ–º—É —Å–ª–∞–π–¥—É —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
                    slides[currentIndex].classList.add('active');
                    
                    // –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Å–ª–∞–π–¥–µ—Ä —Å –ø–ª–∞–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π
                    slider.style.transform = `translateX(-${currentIndex * 100}%)`;
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —Å–ª–∞–π–¥–æ–≤ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
                    updateCounter(currentIndex + 1, direction);
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
                    updateProgressBar(currentIndex + 1, totalSlides);
                    
                    // –£–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å—é —Å—Ç—Ä–µ–ª–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–∑–∏—Ü–∏–∏
                    updateArrowsVisibility();
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                saveCurrentState();
                    
                    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∞–Ω–∏–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –≤—Ä–µ–º—è, —Ä–∞–≤–Ω–æ–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞
                    setTimeout(() => {
                        isAnimating = false;
                    }, 600);
            };

            // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–∞–π–¥—ã –∏ –∏—Ö –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ
            if (slides.length > 1) {
                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ª–∞–π–¥–µ—Ä —Å—Ä–∞–∑—É
                initializeSlider();

                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                    setTimeout(() => {
                    applyRestoredState();
                }, 100);

                // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                if (prevButton) {
                prevButton.addEventListener('click', () => {
                        if (!isAnimating) {
                            window.showSlide(currentIndex - 1);
                        }
                });
                }
                
                if (nextButton) {
                nextButton.addEventListener('click', () => {
                        if (!isAnimating) {
                            window.showSlide(currentIndex + 1);
                        }
                    });
                }

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥ —É—Ö–æ–¥–æ–º —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                window.addEventListener('beforeunload', saveCurrentState);
            }
                
                // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ —Å–ª–∞–π–¥–æ–≤ –∏ —Å—Ç—Ä–∞–Ω–∏—Ü
                const currentSlideElement = document.getElementById('currentSlide');
                const currentPageElement = document.getElementById('currentPage');
                
                // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–ª–∞–π–¥ –ø—Ä–∏ –≤–≤–æ–¥–µ –Ω–æ–º–µ—Ä–∞
                if (currentSlideElement) {
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ–∫—É—Å–∞
                    currentSlideElement.addEventListener('focus', function() {
                        // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —à–∏—Ä–∏–Ω—É —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–µ—Ä–µ–¥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
                        const originalWidth = this.offsetWidth;
                        this.style.minWidth = originalWidth + 'px';
                        
                        this.dataset.originalValue = this.textContent;
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∫–ª–∏–∫–∞
                        this.classList.add('clicked');
                        setTimeout(() => {
                            this.classList.remove('clicked');
                        }, 500);
                    });
                    
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ - —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
                    currentSlideElement.addEventListener('keydown', function(e) {
                        if (e.key === 'Enter') {
                            e.preventDefault();
                            this.blur();
                            return;
                        }
                        
                        // –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, Backspace, Delete, Tab, —Å—Ç—Ä–µ–ª–∫–∏
                        if (!/^\d$/.test(e.key) && 
                            !['Backspace', 'Delete', 'Tab', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {
                            e.preventDefault();
                        }
                    });
                    
                    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞
                    currentSlideElement.addEventListener('blur', function() {
                        // –£–¥–∞–ª—è–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —à–∏—Ä–∏–Ω—É
                        this.style.minWidth = '';
                        
                        const newValue = parseInt(this.textContent, 10);
                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ –∏ –æ–Ω–æ –≤ –¥–æ–ø—É—Å—Ç–∏–º–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
                        if (isNaN(newValue) || newValue < 1 || newValue > totalSlides) {
                            this.textContent = this.dataset.originalValue; // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                        } else {
                            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Å–ª–∞–π–¥—É
                        window.showSlide(newValue - 1);
                        }
                    });
                }
                
                // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏ –≤–≤–æ–¥–µ –Ω–æ–º–µ—Ä–∞
                if (currentPageElement) {
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ–∫—É—Å–∞
                    currentPageElement.addEventListener('focus', function() {
                        // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —à–∏—Ä–∏–Ω—É —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–µ—Ä–µ–¥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
                        const originalWidth = this.offsetWidth;
                        this.style.minWidth = originalWidth + 'px';
                        
                        this.dataset.originalValue = this.textContent;
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∫–ª–∏–∫–∞
                        this.classList.add('clicked');
                        setTimeout(() => {
                            this.classList.remove('clicked');
                        }, 500);
                    });
                    
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ - —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
                    currentPageElement.addEventListener('keydown', function(e) {
                        if (e.key === 'Enter') {
                            e.preventDefault();
                            this.blur();
                            return;
                        }
                        
                        // –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, Backspace, Delete, Tab, —Å—Ç—Ä–µ–ª–∫–∏
                        if (!/^\d$/.test(e.key) && 
                            !['Backspace', 'Delete', 'Tab', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {
                            e.preventDefault();
                        }
                    });
                    
                    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞
                    currentPageElement.addEventListener('blur', function() {
                        // –£–¥–∞–ª—è–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —à–∏—Ä–∏–Ω—É
                        this.style.minWidth = '';
                        
                        const newValue = parseInt(this.textContent, 10);
                        const totalPages = {{ total_pages }};
                        
                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ –∏ –æ–Ω–æ –≤ –¥–æ–ø—É—Å—Ç–∏–º–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
                        if (isNaN(newValue) || newValue < 1 || newValue > totalPages) {
                            this.textContent = this.dataset.originalValue; // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                        } else {
                            // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ —Ç–∞ –∂–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
                            const currentPage = parseInt('{{ current_page }}', 10);
                            if (newValue === currentPage) {
                                this.textContent = currentPage;
                                return;
                            }
                            
                            // –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                            navigateToPage(newValue);
                        }
                    });
                }
                
                // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                function navigateToPage(page) {
                    const urlParams = new URLSearchParams(window.location.search);
                    const currentPage = parseInt(urlParams.get('page') || '1');
                    
                    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
                    const newParams = new URLSearchParams();
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                    newParams.set('page', page.toString());
                    
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                    const sort = urlParams.get('sort');
                    const categories = urlParams.get('categories');
                    
                    if (sort) newParams.set('sort', sort);
                    if (categories) newParams.set('categories', categories);
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º start_from_end —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                    if (page < currentPage) {
                        newParams.set('start_from_end', 'true');
                    }
                    
                    // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º
                    localStorage.removeItem('storyListState');
                    sessionStorage.removeItem('isRedirecting');
                    sessionStorage.setItem('intentionalNavigation', 'true');
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
                    showPageLoading();
                    
                    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                    window.location.href = '/stories/?' + newParams.toString();
                }
                
                // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
                function showPageLoading() {
                    let pageLoading = document.querySelector('.page-loading');
                    
                    if (!pageLoading) {
                        pageLoading = document.createElement('div');
                        pageLoading.className = 'page-loading';
                        
                        const loader = document.createElement('div');
                        loader.className = 'loader';
                        pageLoading.appendChild(loader);
                        
                        document.body.appendChild(pageLoading);
                        
                        // –§–æ—Ä—Å–∏—Ä—É–µ–º –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫—É
                        void pageLoading.offsetWidth;
                    }
                    
                    pageLoading.classList.add('active');
                }
                
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤–∞–π–ø–æ–≤ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
                let touchStartX = 0;
                let touchEndX = 0;
                let isSwiping = false;
                let swipeTranslate = 0;
                
                slider.addEventListener('touchstart', e => {
                    isSwiping = true;
                    touchStartX = e.changedTouches[0].screenX;
                    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥
                    slider.style.transition = 'none';
                }, passiveEventOptions);
                
                slider.addEventListener('touchmove', e => {
                if (!isSwiping) return;
                    
                    // –í—ã—á–∏—Å–ª—è–µ–º —Å–º–µ—â–µ–Ω–∏–µ –æ—Ç –Ω–∞—á–∞–ª–∞ —Å–≤–∞–π–ø–∞
                    const currentX = e.changedTouches[0].screenX;
                    swipeTranslate = currentX - touchStartX;
                    
                    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Å–º–µ—â–µ–Ω–∏–µ
                    const maxTranslate = window.innerWidth * 0.3;
                    if (Math.abs(swipeTranslate) > maxTranslate) {
                        swipeTranslate = swipeTranslate > 0 ? maxTranslate : -maxTranslate;
                    }
                    
                    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–º–µ—â–µ–Ω–∏–µ —Å —Ä–µ–∑–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å—é –Ω–∞ –∫—Ä–∞—è—Ö
                    const resistance = 0.4;
                    const baseTransform = -currentIndex * 100;
                    let dragOffset = swipeTranslate / window.innerWidth * 100;
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –µ—Å–ª–∏ —Å–≤–∞–π–ø –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —Å–ª–∞–π–¥–µ—Ä–∞
                    if ((currentIndex === 0 && swipeTranslate > 0) || 
                        (currentIndex === totalSlides - 1 && swipeTranslate < 0)) {
                        dragOffset *= resistance;
                    }
                    
                    slider.style.transform = `translateX(${baseTransform + dragOffset}%)`;
                }, passiveEventOptions);
                
                slider.addEventListener('touchend', e => {
                if (!isSwiping) return;
                    
                    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
                    slider.style.transition = 'transform 0.6s cubic-bezier(0.33, 1, 0.68, 1)';
                    
                    touchEndX = e.changedTouches[0].screenX;
                    const threshold = window.innerWidth * 0.15; // 15% —ç–∫—Ä–∞–Ω–∞
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –≤–ª–µ–≤–æ/–≤–ø—Ä–∞–≤–æ (—É—á–∏—Ç—ã–≤–∞–µ–º —Å–∫—Ä—ã—Ç—ã–µ —Å—Ç—Ä–µ–ª–∫–∏)
                    const isFirstPage = parseInt(new URLSearchParams(window.location.search).get('page') || '1') === 1;
                    const isLastPage = parseInt(new URLSearchParams(window.location.search).get('page') || '1') >= {{ total_pages }};
                    const canGoLeft = !(currentIndex === 0 && isFirstPage);
                    const canGoRight = !(currentIndex === totalSlides - 1 && isLastPage);
                    
                    if (touchStartX - touchEndX > threshold && canGoRight) {
                        // –°–≤–∞–π–ø –≤–ª–µ–≤–æ - —Å–ª–µ–¥—É—é—â–∏–π —Å–ª–∞–π–¥
                    window.showSlide(currentIndex + 1);
                    } else if (touchEndX - touchStartX > threshold && canGoLeft) {
                        // –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ - –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–ª–∞–π–¥
                    window.showSlide(currentIndex - 1);
                    } else {
                        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ª–∞–π–¥ –Ω–∞ –º–µ—Å—Ç–æ
                        slider.style.transform = `translateX(-${currentIndex * 100}%)`;
                    }
                    
                    isSwiping = false;
                    swipeTranslate = 0;
                }, passiveEventOptions);
                
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è —Å–≤–∞–π–ø–∞
                slider.addEventListener('touchcancel', e => {
                    if (!isSwiping) return;
                    
                    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
                    slider.style.transition = 'transform 0.6s cubic-bezier(0.33, 1, 0.68, 1)';
                    
                    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª–∞–π–¥ –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
                    slider.style.transform = `translateX(-${currentIndex * 100}%)`;
                    
                    isSwiping = false;
                    swipeTranslate = 0;
                }, passiveEventOptions);
                
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–ª–∞–≤–∏—à (–≤–ª–µ–≤–æ/–≤–ø—Ä–∞–≤–æ)
                document.addEventListener('keydown', e => {
                if (isAnimating) return;
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –≤–ª–µ–≤–æ/–≤–ø—Ä–∞–≤–æ (—É—á–∏—Ç—ã–≤–∞–µ–º —Å–∫—Ä—ã—Ç—ã–µ —Å—Ç—Ä–µ–ª–∫–∏)
                    const isFirstPage = parseInt(new URLSearchParams(window.location.search).get('page') || '1') === 1;
                    const isLastPage = parseInt(new URLSearchParams(window.location.search).get('page') || '1') >= {{ total_pages }};
                    const canGoLeft = !(currentIndex === 0 && isFirstPage);
                    const canGoRight = !(currentIndex === totalSlides - 1 && isLastPage);
                    
                    if (e.key === 'ArrowLeft' && canGoLeft) {
                    isAnimating = true;
                    window.showSlide(currentIndex - 1);
                        setTimeout(() => {
                        isAnimating = false;
                        }, 650);
                    } else if (e.key === 'ArrowRight' && canGoRight) {
                    isAnimating = true;
                    window.showSlide(currentIndex + 1);
                        setTimeout(() => {
                        isAnimating = false;
                        }, 650);
                    }
                });
                
                // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
                function checkPaginationStatus() {
                    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL
                    const urlParams = new URLSearchParams(window.location.search);
                    let currentPage = parseInt(urlParams.get('page') || '1');
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                    const hasSort = urlParams.has('sort');
                    const hasCategories = urlParams.has('categories');
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
                    const paginationInfo = document.querySelector('.pagination-info');
                    if (paginationInfo) {
                        paginationInfo.style.display = 'flex';
                    }
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤–ø–µ—Ä–µ–¥/–Ω–∞–∑–∞–¥
                    updateArrowsVisibility();
                }
                
                // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏ –±–æ–ª—å—à–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∏—Å—Ç–æ—Ä–∏–π
                function goToNextPage() {
                    // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Å–ª–∞–π–¥ –ø–æ—Å–ª–µ–¥–Ω–∏–π, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                    if (currentIndex === totalSlides - 1) {
                        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL
                        const urlParams = new URLSearchParams(window.location.search);
                        let currentPage = parseInt(urlParams.get('page') || '1');
                        
                        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
                        const sort = urlParams.get('sort');
                        const categories = urlParams.get('categories');
                        
                        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
                        const newParams = new URLSearchParams();
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                        newParams.set('page', (currentPage + 1).toString());
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
                        if (sort) newParams.set('sort', sort);
                        if (categories) newParams.set('categories', categories);
                        
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
                        showPageLoading();
                        
                        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        setTimeout(() => {
                            window.location.href = window.location.pathname + '?' + newParams.toString();
                        }, 300);
                    }
                }
                
                // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                function goToPrevPage() {
                    // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Å–ª–∞–π–¥ –ø–µ—Ä–≤—ã–π, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                    if (currentIndex === 0) {
                        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL
                        const urlParams = new URLSearchParams(window.location.search);
                        let currentPage = parseInt(urlParams.get('page') || '1');
                        
                        // –ù–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º, –µ—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
                        if (currentPage <= 1) {
                            return;
                        }
                        
                        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
                        const sort = urlParams.get('sort');
                        const categories = urlParams.get('categories');
                        
                        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
                        const newParams = new URLSearchParams();
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                        newParams.set('page', (currentPage - 1).toString());
                        
                    // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å –∫–æ–Ω—Ü–∞
                    newParams.set('start_from_end', 'true');
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
                        if (sort) newParams.set('sort', sort);
                        if (categories) newParams.set('categories', categories);
                        
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
                        showPageLoading();
                        
                        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                            window.location.href = window.location.pathname + '?' + newParams.toString();
                    }
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ —Å–ª–∞–π–¥–µ—Ä–∞
                function checkForInitialPosition() {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä from_end –≤ URL
                    const urlParams = new URLSearchParams(window.location.search);
                    const fromEnd = urlParams.get('from_end');
                    const slideIndex = urlParams.get('slide_index');
                    const fromStoryId = urlParams.get('from_story_id');
                    
                    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä slide_index (–≤–æ–∑–≤—Ä–∞—Ç —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤)
                    if (slideIndex !== null) {
                        const index = parseInt(slideIndex);
                        if (!isNaN(index) && index >= 0 && index < totalSlides) {
                            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Å–ª–∞–π–¥
                        window.showSlide(index);
                            
                            // –£–¥–∞–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                            urlParams.delete('slide_index');
                            urlParams.delete('from_story_id');
                            const newUrl = window.location.pathname + 
                                        (urlParams.toString() ? '?' + urlParams.toString() : '');
                            window.history.replaceState({}, document.title, newUrl);
                            return;
                        }
                    }
                    // –ï—Å–ª–∏ –µ—Å—Ç—å fromStoryId, –Ω–æ –Ω–µ—Ç slideIndex - –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∏—Å—Ç–æ—Ä–∏—é –ø–æ ID
                    else if (fromStoryId !== null) {
                        // –ò—â–µ–º —Å–ª–∞–π–¥ —Å –Ω—É–∂–Ω—ã–º storyId
                        for (let i = 0; i < slides.length; i++) {
                            const storyContainer = slides[i].querySelector('.container-story');
                            if (storyContainer && storyContainer.getAttribute('data-story-id') === fromStoryId) {
                            window.showSlide(i);
                                
                                // –£–¥–∞–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–∑ URL –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                                urlParams.delete('from_story_id');
                                const newUrl = window.location.pathname + 
                                            (urlParams.toString() ? '?' + urlParams.toString() : '');
                                window.history.replaceState({}, document.title, newUrl);
                                return;
                            }
                        }
                    }
                    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä from_end (–≤–æ–∑–≤—Ä–∞—Ç —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
                    else if (fromEnd === '1') {
                        // –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–ª–∞–π–¥–∞
                    window.showSlide(totalSlides - 1);
                        
                        // –£–¥–∞–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–∑ URL –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                        urlParams.delete('from_end');
                        const newUrl = window.location.pathname + 
                                      (urlParams.toString() ? '?' + urlParams.toString() : '');
                        window.history.replaceState({}, document.title, newUrl);
                    } else {
                        // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –ø–µ—Ä–≤–æ–≥–æ —Å–ª–∞–π–¥–∞
                    window.showSlide(0);
                    }
                }
                
                // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–µ–ª–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                function updateArrowsVisibility() {
                    if (!prevButton || !nextButton) return;
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–µ —Å—Ç—Ä–µ–ª–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                    prevButton.style.opacity = '1';
                    prevButton.style.pointerEvents = 'auto';
                    nextButton.style.opacity = '1';
                    nextButton.style.pointerEvents = 'auto';
                    
                    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    const urlParams = new URLSearchParams(window.location.search);
                    const isFirstPage = parseInt(urlParams.get('page') || '1') === 1;
                    const isLastPage = parseInt(urlParams.get('page') || '1') >= {{ total_pages }};
                    
                    // –ï—Å–ª–∏ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π,
                    // –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è —ç—Ç–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
                    const categoriesParam = urlParams.get('categories');
                    const hasCategoryFilter = categoriesParam && categoriesParam.length > 0;
                    
                    // –ï—Å–ª–∏ –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥ –∏ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
                    if (currentIndex === 0 && isFirstPage) {
                        prevButton.style.opacity = '0';
                        prevButton.style.pointerEvents = 'none';
                    }
                    
                    // –ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–ª–∞–π–¥ –∏ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
                    if (currentIndex === totalSlides - 1 && isLastPage) {
                        nextButton.style.opacity = '0';
                        nextButton.style.pointerEvents = 'none';
                    }
                }
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω–¥–µ–∫—Å —Å–ª–∞–π–¥–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
                document.querySelectorAll('.comment-stats').forEach(function(commentBtn) {
                    commentBtn.addEventListener('click', function() {
                        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å —Å–ª–∞–π–¥–∞ –≤ localStorage –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º
                        localStorage.setItem('lastSlideIndex', currentIndex);
                    });
                });

            // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
            function formatNumber(num) {
                if (num < 1000) return num;
                if (num < 10000) return (num/1000).toFixed(1) + 'k';
                if (num < 1000000) return Math.round(num/1000) + 'k';
                return (num/1000000).toFixed(1) + 'M';
            }

            function updateProgressBar(current, total) {
                const progressBar = document.getElementById('slideProgress');
                if (!progressBar) return;
                
                // –ü–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
                const percentage = (current / total) * 100;
                progressBar.style.width = `${percentage}%`;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
                const totalElement = document.querySelector('.counter-total');
                if (totalElement) {
                    totalElement.textContent = formatNumber(total);
                }
            }

            function updateCounter(current, direction) {
                const counterElement = document.getElementById('currentSlide');
                if (!counterElement) return;
                
                // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∫–ª–∞—Å—Å—ã –∞–Ω–∏–º–∞—Ü–∏–∏
                counterElement.classList.remove('counter-animation-up', 'counter-animation-down');
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º contenteditable —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                const wasEditable = counterElement.contentEditable === 'true';
                if (wasEditable) {
                    counterElement.contentEditable = 'false';
                }
                
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –±–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–∏, –µ—Å–ª–∏ —ç—Ç–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
                if (!direction) {
                    counterElement.textContent = formatNumber(current);
                } else {
                    // –§–æ—Ä—Å–∏—Ä—É–µ–º –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫—É DOM
                    void counterElement.offsetWidth;
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                    counterElement.classList.add(`counter-animation-${direction}`);
                    
                    // –ú–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
                    counterElement.textContent = formatNumber(current);
                }
                
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º contenteditable —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                setTimeout(() => {
                    if (wasEditable) {
                        counterElement.contentEditable = 'true';
                    }
                }, 500);
            }

            function adjustCounterSizeForLargeNumbers(total) {
                const counterContainer = document.querySelector('.slide-counter');
                if (!counterContainer) return;
                
                // –ï—Å–ª–∏ –±–æ–ª—å—à–µ 999, —É–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
                if (total >= 1000) {
                    counterContainer.classList.add('big-number');
                }
            }

            function saveSlidePosition(index) {
                localStorage.setItem('lastSlideIndex', index);
                // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º ID —Ç–µ–∫—É—â–µ–π –∏—Å—Ç–æ—Ä–∏–∏
                const currentSlide = slides[index];
                if (currentSlide) {
                    const storyContainer = currentSlide.querySelector('.container-story');
                    if (storyContainer) {
                        const storyId = storyContainer.getAttribute('data-story-id');
                        if (storyId) {
                            localStorage.setItem('lastStoryId', storyId);
                        }
                    }
                }
            }

            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—á–∏—Å—Ç–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ URL
            function cleanupUrlParameters() {
                const urlParams = new URLSearchParams(window.location.search);
                const slideIndex = urlParams.get('slide_index');
                const fromStoryId = urlParams.get('from_story_id');
                const startFromEnd = urlParams.get('start_from_end');
                
                // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
                const newParams = new URLSearchParams();
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
                const page = urlParams.get('page');
                const sort = urlParams.get('sort');
                const categories = urlParams.get('categories');
                
                if (page) newParams.set('page', page);
                if (sort) newParams.set('sort', sort);
                if (categories) newParams.set('categories', categories);
                
                // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –Ω–∞—á–∞—Ç—å —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–ª–∞–π–¥–∞
                if (startFromEnd === 'true') {
                    currentIndex = slides.length - 1;
                    window.showSlide(currentIndex);
                    
                    // –£–¥–∞–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä start_from_end
                    urlParams.delete('start_from_end');
                }
                
                // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
                if (slideIndex !== null) {
                    const index = parseInt(slideIndex);
                    if (!isNaN(index) && index >= 0 && index < slides.length) {
                        setTimeout(() => {
                            window.showSlide(index);
                        }, 100);
                    }
                }
                
                // –ó–∞–º–µ–Ω—è–µ–º URL –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                const newUrl = window.location.pathname + 
                              (newParams.toString() ? '?' + newParams.toString() : '');
                window.history.replaceState({}, '', newUrl);
            }

            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            function applyRestoredState() {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ —ç—Ç–æ –Ω–∞–º–µ—Ä–µ–Ω–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
                if (sessionStorage.getItem('intentionalNavigation')) {
                    sessionStorage.removeItem('intentionalNavigation');
                    return;
                }

                const state = restoreState();
                if (!state) {
                    // –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL
                    cleanupUrlParameters();
                    return;
                }

                const currentUrlParams = new URLSearchParams(window.location.search);
                const currentPage = currentUrlParams.get('page') || '1';
                
                // –ù–µ –≤—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç, –µ—Å–ª–∏ –º—ã —É–∂–µ –Ω–∞ –Ω—É–∂–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
                if (state.page === currentPage) {
                    if (state.slide) {
                        const slideIndex = parseInt(state.slide) - 1;
                        if (window.showSlide && typeof window.showSlide === 'function') {
                            window.showSlide(slideIndex);
                        }
                    }
                    localStorage.removeItem('storyListState');
                    return;
                }

                // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–º
                localStorage.removeItem('storyListState');
            }

            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            function determineNavigationDirection(targetPage) {
                const currentPage = parseInt(window.location.pathname.split('/').pop()) || 1;
                sessionStorage.setItem('previousPage', currentPage);
                return targetPage < currentPage;
            }

            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–ª–∞–π–¥–µ—Ä–∞
            function initializeSlider() {
                if (slides.length <= 1) return;

                // –°–∫—Ä—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –Ω–∞ –≤—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
                const counterElement = document.getElementById('currentSlide');
                const counterContainer = document.querySelector('.slide-counter');
                if (counterContainer) {
                    counterContainer.style.opacity = '0';
                }

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä start_from_end
                const urlParams = new URLSearchParams(window.location.search);
                const startFromEnd = urlParams.get('start_from_end') === 'true';
                
                if (startFromEnd) {
                    currentIndex = slides.length - 1;
                    slides[currentIndex].classList.add('active');
                    updateProgressBar(currentIndex + 1, totalSlides);
                    slider.style.transform = `translateX(-${currentIndex * 100}%)`;
                    
                    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
                    if (counterElement) {
                        counterElement.textContent = totalSlides;
                    }
                    
                    // –£–¥–∞–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–∑ URL
                    urlParams.delete('start_from_end');
                    const newUrl = window.location.pathname + (urlParams.toString() ? '?' + urlParams.toString() : '');
                    window.history.replaceState({}, '', newUrl);
                } else {
                    currentIndex = 0;
                    slides[0].classList.add('active');
                    updateProgressBar(1, totalSlides);
                    
                    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Å–ª–∞–π–¥–∞
                    if (counterElement) {
                        counterElement.textContent = '1';
                    }
                }

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∏–µ —á–∏—Å–ª–∞, –¥–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–ª–∞—Å—Å
                adjustCounterSizeForLargeNumbers(totalSlides);
                
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                checkPaginationStatus();
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å —Å—Ç—Ä–µ–ª–æ–∫
                updateArrowsVisibility();

                // –ü–ª–∞–≤–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
                if (counterContainer) {
                    setTimeout(() => {
                        counterContainer.style.transition = 'opacity 0.3s ease';
                        counterContainer.style.opacity = '1';
                    }, 100);
                }
            }

            const urlParams = new URLSearchParams(window.location.search);
            const startFromEnd = urlParams.get('start_from_end') === 'true';
            
            if (startFromEnd && slider) {
                currentIndex = slides.length - 1;
                showSlide(currentIndex);
                
                // –û—á–∏—â–∞–µ–º URL –æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
                urlParams.delete('start_from_end');
                const newUrl = window.location.pathname + (urlParams.toString() ? '?' + urlParams.toString() : '');
                window.history.replaceState({}, '', newUrl);
            }
        });
    </script>
    
    <!-- JavaScript –¥–ª—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é
            {% if request.session.story_submitted %}
                // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                const notification = document.getElementById('moderationNotification');
                const closeBtn = document.getElementById('closeNotification');
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
                setTimeout(() => {
                    notification.classList.add('show');
                }, 500);
                
                // –°–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 6 —Å–µ–∫—É–Ω–¥
                const autoHideTimeout = setTimeout(() => {
                    hideNotification();
                }, 6000);
                
                // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
                function hideNotification() {
                    notification.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
                    notification.style.opacity = '0';
                    notification.style.transform = 'translateY(-20px)';
                    
                    // –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ —É–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å show
                    setTimeout(() => {
                        notification.classList.remove('show');
                        notification.style = '';  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–ª–∞–π–Ω-—Å—Ç–∏–ª–∏
                    }, 500);
                }
                
                // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
                closeBtn.addEventListener('click', function(e) {
                    e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è –∫–ª–∏–∫–∞
                    hideNotification();
                    clearTimeout(autoHideTimeout);
                });
                
                // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ –∫–ª–∏–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é —á–∞—Å—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                notification.addEventListener('click', function(e) {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –±—ã–ª –Ω–µ –ø–æ –∫–Ω–æ–ø–∫–µ –∑–∞–∫—Ä—ã—Ç–∏—è
                    if (e.target !== closeBtn && !closeBtn.contains(e.target)) {
                        // –°–Ω–∞—á–∞–ª–∞ —Å–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                        hideNotification();
                        
                        // –û—Ç–º–µ–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
                        clearTimeout(autoHideTimeout);
                        
                        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ—Ñ–∏–ª—è
                        setTimeout(() => {
                            window.location.href = "{{ url('profile') }}";
                        }, 300); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
                    }
                });
                
                // –£–¥–∞–ª—è–µ–º —Ñ–ª–∞–≥ –∏–∑ —Å–µ—Å—Å–∏–∏, —á—Ç–æ–±—ã –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–π –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                fetch("{{ url('clear_notification') }}", { 
                    method: 'POST', 
                    headers: { 
                        'X-CSRFToken': '{{ csrf_token }}' 
                    } 
                });
            {% endif %}

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ–ª—å—à–∏—Ö —á–∏—Å–µ–ª –∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            document.querySelectorAll('.stats-count').forEach(formatLargeNumber);
            
            // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ª–∞–π–∫–æ–≤ –∏ –¥–∏–∑–ª–∞–π–∫–æ–≤
            {% if request.user.is_authenticated %}
                document.querySelectorAll('.story-stats').forEach(function(button) {
                    const iconElement = button.querySelector('.like-icon, .dislike-icon');
                    if (iconElement && iconElement.classList.contains('active')) {
                        if (iconElement.classList.contains('like-icon')) {
                            button.classList.add('active-like');
                        } else if (iconElement.classList.contains('dislike-icon')) {
                            button.classList.add('active-dislike');
                        }
                    }
                });
            {% endif %}
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ª–∞–π–∫–∞ –∏ –¥–∏–∑–ª–∞–π–∫–∞
            document.querySelectorAll('.like-stats, .dislike-stats').forEach(function(button) {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è
                    e.stopPropagation();
                    
                    const storyId = this.getAttribute('data-story-id');
                    const isLike = this.classList.contains('like-stats');
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –∫ —ç—Ç–æ–π –∫–Ω–æ–ø–∫–µ
                    // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–ª–∏–∫–æ–≤
                    if (this.classList.contains('processing')) {
                        return;
                    }
                    
                    this.classList.add('processing');
                    this.classList.remove('button-clicked');
                    void this.offsetWidth; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
                    this.classList.add('button-clicked');
                    
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
                    sendReaction(storyId, isLike, this);
                    
                    // –£–¥–∞–ª—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à–æ–π —Ç–∞–π–º–∞—É—Ç
                    setTimeout(() => {
                        this.classList.remove('processing');
                    }, 800);
                });
                
                // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –¥—Ä–æ–∂–∞–Ω–∏–µ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏
                button.addEventListener('mousedown', function(e) {
                    e.preventDefault();
                });
            });
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
            document.querySelectorAll('.comment-stats').forEach(function(button) {
                button.addEventListener('click', function() {
                    const storyId = this.closest('.container-story').getAttribute('data-story-id');
                    
                    // –ü—Ä–æ—Å—Ç–æ —Å—Ä–∞–∑—É –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
                    window.location.href = `/stories/${storyId}/comments/`;
                });
            });
        });
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∫–æ–Ω–∫–∏
        function toggleIconActive(iconElement, active) {
            if (active) {
                iconElement.classList.add('active');
            } else {
                iconElement.classList.remove('active');
            }
        }
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏
        function toggleButtonActive(button, active, type) {
            if (type === 'like') {
                if (active) {
                    button.classList.add('active-like');
                } else {
                    button.classList.remove('active-like');
                }
            } else if (type === 'dislike') {
                if (active) {
                    button.classList.add('active-dislike');
                } else {
                    button.classList.remove('active-dislike');
                }
            }
        }
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∞–∫—Ü–∏–∏
        function sendReaction(storyId, isLike, clickedButton) {
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ä–µ–∞–∫—Ü–∏–∏
            const url = isLike 
                ? '/stories/ajax/like/' + storyId + '/' 
                : '/stories/ajax/dislike/' + storyId + '/';
            
            // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            const container = clickedButton.closest('.story-stats-container');
            const likeButton = container.querySelector('.like-stats');
            const dislikeButton = container.querySelector('.dislike-stats');
            const likeIcon = likeButton.querySelector('.like-icon');
            const dislikeIcon = dislikeButton.querySelector('.dislike-icon');
            const likeCount = likeButton.querySelector('.stats-count');
            const dislikeCount = dislikeButton.querySelector('.stats-count');
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            const wasLikeActive = likeIcon.classList.contains('active');
            const wasDislikeActive = dislikeIcon.classList.contains('active');
            
            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRFToken': getCookie('csrftoken')
                },
                credentials: 'same-origin'
            })
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    // –ï—Å–ª–∏ –∫–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ –ª–∞–π–∫
                    if (isLike) {
                        // –ï—Å–ª–∏ –ª–∞–π–∫ –±—ã–ª –ø–æ—Å—Ç–∞–≤–ª–µ–Ω
                        toggleIconActive(likeIcon, data.liked);
                        toggleButtonActive(likeButton, data.liked, 'like');
                        
                        // –ï—Å–ª–∏ –±—ã–ª –¥–∏–∑–ª–∞–π–∫ –∏ –Ω—É–∂–Ω–æ –µ–≥–æ —É–±—Ä–∞—Ç—å
                        if (data.was_disliked) {
                            toggleIconActive(dislikeIcon, false);
                            toggleButtonActive(dislikeButton, false, 'dislike');
                            
                            // –ê–Ω–∏–º–∏—Ä—É–µ–º –¥–∏–∑–ª–∞–π–∫ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω –∏ –º–µ–Ω—è–µ–º –Ω–∞ –ª–∞–π–∫
                            if (wasDislikeActive) {
                                dislikeButton.classList.remove('button-clicked');
                                void dislikeButton.offsetWidth;
                                dislikeButton.classList.add('button-clicked');
                            }
                        }
                    } 
                    // –ï—Å–ª–∏ –∫–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ –¥–∏–∑–ª–∞–π–∫
                    else {
                        // –ï—Å–ª–∏ –¥–∏–∑–ª–∞–π–∫ –±—ã–ª –ø–æ—Å—Ç–∞–≤–ª–µ–Ω
                        toggleIconActive(dislikeIcon, data.disliked);
                        toggleButtonActive(dislikeButton, data.disliked, 'dislike');
                        
                        // –ï—Å–ª–∏ –±—ã–ª –ª–∞–π–∫ –∏ –Ω—É–∂–Ω–æ –µ–≥–æ —É–±—Ä–∞—Ç—å
                        if (data.was_liked) {
                            toggleIconActive(likeIcon, false);
                            toggleButtonActive(likeButton, false, 'like');
                            
                            // –ê–Ω–∏–º–∏—Ä—É–µ–º –ª–∞–π–∫ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω –∏ –º–µ–Ω—è–µ–º –Ω–∞ –¥–∏–∑–ª–∞–π–∫
                            if (wasLikeActive) {
                                likeButton.classList.remove('button-clicked');
                                void likeButton.offsetWidth;
                                likeButton.classList.add('button-clicked');
                            }
                        }
                    }
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
                    updateCountWithAnimation(likeCount, data.likes_count);
                    updateCountWithAnimation(dislikeCount, data.dislikes_count);
                } else {
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
                    
                    if (data.message && data.message.includes('–∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å')) {
                        window.location.href = '/users/login/';
                    }
                }
            })
            .catch(error => {
                console.error('–û—à–∏–±–∫–∞:', error);
            });
        }
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        function updateCountWithAnimation(countElement, newValue) {
            // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —à–∏—Ä–∏–Ω—É —ç–ª–µ–º–µ–Ω—Ç–∞
            const originalWidth = countElement.offsetWidth;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
            countElement.classList.add('count-animated');
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
            countElement.textContent = formatLargeNumber(newValue);
            
            // –£–±–∏—Ä–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à–æ–µ –≤—Ä–µ–º—è
            setTimeout(() => {
                countElement.classList.remove('count-animated');
            }, 400);
        }
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ–ª—å—à–∏—Ö —á–∏—Å–µ–ª
        function formatLargeNumber(element) {
            if (typeof element === 'object' && element !== null) {
                const num = parseInt(element.textContent.trim(), 10);
                element.textContent = formatLargeNumber(num);
                return element;
            }
            
            const num = parseInt(element, 10);
            if (num >= 1000000) {
                return (num / 1000000).toFixed(1) + '–ú';
            } else if (num >= 1000) {
                return (num / 1000).toFixed(1) + '–ö';
            }
            return num.toString().padStart(1, ' ');
        }
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É–∫–∏
        function getCookie(name) {
            let cookieValue = null;
            if (document.cookie && document.cookie !== '') {
                const cookies = document.cookie.split(';');
                for (let i = 0; i < cookies.length; i++) {
                    const cookie = cookies[i].trim();
                    if (cookie.substring(0, name.length + 1) === (name + '=')) {
                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                        break;
                    }
                }
            }
            return cookieValue;
        }

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        function saveCurrentState() {
            const currentPage = document.querySelector('.current').textContent;
            const currentSlide = document.getElementById('currentSlide').textContent;
            const urlParams = new URLSearchParams(window.location.search);
            const sort = urlParams.get('sort') || 'new';
            const categories = urlParams.get('categories') || '';

            const state = {
                page: currentPage,
                slide: currentSlide,
                sort: sort,
                categories: categories,
                timestamp: Date.now() // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
            };

            localStorage.setItem('storyListState', JSON.stringify(state));
        }

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
        function restoreState() {
            const savedState = localStorage.getItem('storyListState');
            if (!savedState) return null;

            try {
                const state = JSON.parse(savedState);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É—Å—Ç–∞—Ä–µ–ª–æ –ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (30 —Å–µ–∫—É–Ω–¥)
                if (Date.now() - state.timestamp > 30000) {
                    localStorage.removeItem('storyListState');
                    return null;
                }
                
                return state;
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è:', e);
                return null;
            }
        }
    </script>
    
    <!-- JavaScript –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤—ã–±–æ—Ä–æ–º –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤—ã–±–æ—Ä–æ–º –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            const multiCategoryToggle = document.getElementById('multiCategoryToggle');
            const categoryArea = document.getElementById('categoryArea');
            const categorySearch = document.getElementById('categorySearch');
            const categoryList = document.getElementById('categoryList');
            const closeCategoryArea = document.getElementById('closeCategoryArea');
            const applyCategoryBtn = document.getElementById('applyCategoryBtn');
            const categorySelectedDisplay = document.getElementById('categorySelectedDisplay');
            const activeFiltersContainer = document.getElementById('activeFiltersContainer');
            const activeFilters = document.getElementById('activeFilters');
            const selectedCategoriesInput = document.getElementById('selectedCategories');
            const selectedSortInput = document.getElementById('selectedSort'); // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
            
            // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            let selectedCategories = [];
            
            // –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            multiCategoryToggle.addEventListener('click', function() {
                categoryArea.classList.toggle('visible');
                
                // –ï—Å–ª–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –æ–∫–Ω–æ —Å –≤—ã–±–æ—Ä–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –µ–≥–æ
                if (categoryArea.classList.contains('visible')) {
                    initCategorySelection();
                }
            });
            
            // –ó–∞–∫—Ä—ã—Ç—å –æ–±–ª–∞—Å—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            closeCategoryArea.addEventListener('click', function() {
                categoryArea.classList.remove('visible');
            });
            
            // –ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            categorySearch.addEventListener('input', function() {
                const query = this.value.toLowerCase();
                
                document.querySelectorAll('.category-item').forEach(item => {
                    const name = item.textContent.toLowerCase();
                    if (name.includes(query)) {
                        item.style.display = '';
                    } else {
                        item.style.display = 'none';
                    }
                });
            });
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            function initCategorySelection() {
                // –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–∞–Ω–µ–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –æ—Ç–º–µ—á–∞–µ–º –∏—Ö
                document.querySelectorAll('.category-item').forEach(item => {
                    item.classList.remove('selected');
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç –≤—ã–±—Ä–∞–Ω —Ä–∞–Ω–µ–µ
                    const categoryId = parseInt(item.dataset.id);
                    if (selectedCategories.some(cat => cat.id === categoryId)) {
                        item.classList.add('selected');
                    }
                });
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                updateCategorySelectedDisplay();
            }
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Å–ø–∏—Å–∫–µ
            document.querySelectorAll('.category-item').forEach(item => {
                item.addEventListener('click', function() {
                    const categoryId = parseInt(this.dataset.id);
                    const categoryName = this.dataset.name;
                    
                    // –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ –≤—ã–±—Ä–∞–Ω–∞, —É–¥–∞–ª—è–µ–º –µ–µ
                    if (this.classList.contains('selected')) {
                        this.classList.remove('selected');
                        selectedCategories = selectedCategories.filter(cat => cat.id !== categoryId);
                        
                        // –£–¥–∞–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ localStorage
                        localStorage.removeItem('selectedCategories');
                        console.log('–£–¥–∞–ª–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏–∑ localStorage');
                    } else {
                        // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ
                        this.classList.add('selected');
                        selectedCategories.push({ id: categoryId, name: categoryName });
                        
                        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ localStorage
                        localStorage.setItem('selectedCategories', categoryId);
                        console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤ localStorage:', categoryId);
                    }
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                    updateCategorySelectedDisplay();
                });
            });
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            function updateCategorySelectedDisplay() {
                if (selectedCategories.length > 0) {
                    const categoryNames = selectedCategories.map(c => c.name).join(', ');
                    categorySelectedDisplay.innerHTML = `<strong>–í—ã–±—Ä–∞–Ω–æ ${selectedCategories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π:</strong> ${categoryNames}`;
                } else {
                    categorySelectedDisplay.innerHTML = '<span class="no-category-selected">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã</span>';
                }
            }
            
            // –ü—Ä–∏–º–µ–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            applyCategoryBtn.addEventListener('click', function() {
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                categoryArea.classList.remove('visible');
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
                updateActiveFilters();
                
                // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
                applyMultiCategoryFilters();
            });
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
            function updateActiveFilters() {
                activeFilters.innerHTML = '';
                
                if (selectedCategories.length > 0) {
                    activeFiltersContainer.style.display = 'flex';
                    
                    selectedCategories.forEach(category => {
                        const filterBtn = document.createElement('span');
                        filterBtn.className = 'category-filter-btn';
                        filterBtn.textContent = category.name;
                        filterBtn.dataset.id = category.id;
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ —Ñ–∏–ª—å—Ç—Ä–∞
                        filterBtn.addEventListener('click', function() {
                            const categoryId = parseInt(this.dataset.id);
                            selectedCategories = selectedCategories.filter(cat => cat.id !== categoryId);
                            
                            // –£–¥–∞–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ localStorage
                            localStorage.removeItem('selectedCategories');
                            console.log('–£–¥–∞–ª–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏–∑ localStorage');
                            
                            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
                            updateActiveFilters();
                            
                            // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
                            applyMultiCategoryFilters();
                        });
                        
                        activeFilters.appendChild(filterBtn);
                    });
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ" –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                    if (selectedCategories.length > 1) {
                        const clearAllBtn = document.createElement('span');
                        clearAllBtn.className = 'category-filter-btn clear-all';
                        clearAllBtn.textContent = '–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ';
                        
                        clearAllBtn.addEventListener('click', function() {
                            selectedCategories = [];
                            
                            // –£–¥–∞–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ localStorage
                            localStorage.removeItem('selectedCategories');
                            console.log('–£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ localStorage');
                            
                            updateActiveFilters();
                            applyMultiCategoryFilters();
                        });
                        
                        activeFilters.appendChild(clearAllBtn);
                    }
                } else {
                    activeFiltersContainer.style.display = 'none';
                    
                    // –£–¥–∞–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ localStorage, –µ—Å–ª–∏ –Ω–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                    localStorage.removeItem('selectedCategories');
                    console.log('–£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ localStorage');
                }
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ
                if (selectedCategoriesInput) {
                    selectedCategoriesInput.value = selectedCategories.map(cat => cat.id).join(',');
                }
            }
            
            // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            function applyMultiCategoryFilters() {
                // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL
                const urlParams = new URLSearchParams(window.location.search);
                const params = [];
                
                // –ü—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã,
                // —Ç–∞–∫ –∫–∞–∫ –Ω–∞–±–æ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è
                // –ù–ï —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ —Å–º–µ–Ω–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                
                // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
                const sort = selectedSortInput.value;
                if (sort && sort !== 'new') {
                    params.push(`sort=${sort}`);
                }
                
                // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                if (selectedCategories.length > 0) {
                    const categoryIds = selectedCategories.map(cat => cat.id).join(',');
                    params.push(`categories=${categoryIds}`);
                }
                
                // –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
                let url = window.location.pathname;
                if (params.length > 0) {
                    url += '?' + params.join('&');
                }
                
                // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –Ω–æ–≤—ã–π URL
                window.location.href = url;
            }
            
            // –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ URL
            (function initMultiCategories() {
                const urlParams = new URLSearchParams(window.location.search);
                const categoriesParam = urlParams.get('categories');
                
                if (categoriesParam) {
                    const categoryIds = categoriesParam.split(',').map(id => parseInt(id));
                    
                    // –ó–∞–ø–æ–ª–Ω—è–µ–º –º–∞—Å—Å–∏–≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                    document.querySelectorAll('.category-item').forEach(item => {
                        const categoryId = parseInt(item.dataset.id);
                        const categoryName = item.dataset.name;
                        
                        if (categoryIds.includes(categoryId)) {
                            selectedCategories.push({ id: categoryId, name: categoryName });
                        }
                    });
                    
                    // –ï—Å–ª–∏ –µ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    if (selectedCategories.length > 0) {
                        updateActiveFilters();
                    } else {
                        // –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–∫–∞–∑–∞–Ω—ã –≤ URL, –Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Å–ø–∏—Å–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                        // (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID), —Å–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
                        activeFiltersContainer.style.display = 'none';
                        
                        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                        console.warn('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–∫–∞–∑–∞–Ω—ã –≤ URL, –Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Å–ø–∏—Å–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', categoryIds);
                    }
                } else {
                    // –°–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, –µ—Å–ª–∏ –Ω–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ URL
                    activeFiltersContainer.style.display = 'none';
                }
                
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–æ–≥–æ –ø–æ–ª—è –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —á–∞—Å—Ç—å—é)
                if (selectedCategories.length > 0) {
                    const categoryIds = selectedCategories.map(cat => cat.id).join(',');
                    selectedCategoriesInput.value = categoryIds;
                }
            })();
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –µ–≥–æ –æ–±–ª–∞—Å—Ç–∏
            document.addEventListener('click', function(e) {
                if (categoryArea.classList.contains('visible') && 
                    !e.target.closest('.category-content') && 
                    !e.target.closest('#multiCategoryToggle')) {
                    categoryArea.classList.remove('visible');
                }
            });
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–ª–∞–≤–∏—à–∏ Escape
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape' && categoryArea.classList.contains('visible')) {
                    categoryArea.classList.remove('visible');
                }
            });
        });
    </script>
{% endblock %}
