{% extends "base/base.j2" %}


{% block head %}
    <link rel="stylesheet" href="{{ static('css/MainPage.css') }}">
    <link rel="stylesheet" href="{{ static('css/FormContainer.css') }}">
    <link rel="stylesheet" href="{{ static('css/NewStory.css') }}">
    <style>
        .container {
            position: relative;
            padding-bottom: 70px; /* –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É –¥–ª—è –∫–Ω–æ–ø–∫–∏ */
            min-height: 250px;
            max-height: 450px; 
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è —Å—á–µ—Ç—á–∏–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π */
        .category-content {
            position: relative;
            padding-top: 10px;
        }
        
        .category-header {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 15px;
            text-align: center;
        }
        
        .category-title {
            margin-bottom: 8px;
            width: 100%;
            text-align: center;
            font-size: 20px;
        }
        
        .close-category-area {
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 22px;
            background: none;
            border: none;
            color: #fff;
            cursor: pointer;
            z-index: 5;
            padding: 0;
            line-height: 1;
        }
        
        .category-counter {
            font-size: 14px;
            color: #888;
            padding: 3px 8px;
            border-radius: 12px;
            background: rgba(255, 255, 255, 0.2);
            margin-top: 5px;
        }
        
        .category-counter.limit-close {
            color: #ff9800;
            background: rgba(255, 152, 0, 0.1);
        }
        
        .category-counter.limit-reached {
            color: #ff5252;
            background: rgba(255, 82, 82, 0.1);
        }
        
        /* –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */
        @media screen and (max-width: 768px) {
            .main-title {
                font-size: 24px;
                margin-bottom: 10px;
            }
            
            .main-description {
                font-size: 14px;
                line-height: 1.4;
            }
            
            .main-info-text p[style*="color: #ffcc00"] {
                height: auto !important;
            }
            
            .story-title-container, .story-history-container {
                font-size: 16px;
            }
            
            .story-title-display, .story-content-display {
                font-size: 15px;
            }
            
            .story-title-input, .story-content-input {
                font-size: 15px;
            }
            
            .container-submit {
                display: flex;
                justify-content: center;
                align-items: center;
                width: 100%;
                margin-top: 15px;
                position: absolute;
                bottom: 10px;
                left: 0;
                right: 0;
            }
            
            .container-submit button {
                width: 80%;
                font-size: 16px;
                padding: 10px;
                max-width: 300px;
                margin: 0 auto;
            }
            
            .story-media-files, .story-category {
                font-size: 12px;
            }
            
            .file-upload-label {
                font-size: 14px;
                padding: 50px!important;
            }
            
            .category-title {
                font-size: 18px;
            }
            
            .category-item {
                font-size: 14px;
                padding: 8px;
            }
        }
    </style>
{% endblock %}

{% block content %}
    <div class="main-info">
        <div class="main-info-text">
        <h1 class="main-title">–ù–û–í–ê–Ø –ò–°–¢–û–†–ò–Ø</h1>
        <p class="main-description">–†–∞—Å—Å–∫–∞–∂–∏, –∫–∞–∫ —Ç—ã –≤–ª—è–ø–∞–ª—Å—è –≤ –æ—á–µ—Ä–µ–¥–Ω—É—é –Ω–µ–ª–µ–ø—É—é —Å–∏—Ç—É–∞—Ü–∏—é,
–∏ –ø–æ–ª—É—á–∏ —à–∞–Ω—Å –Ω–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –Ω–µ —Å—Ç—Ä–∞—Ö–æ–≤–æ–π —Å–ª—É—á–∞–π üòç.</p>
        <p class="main-description" style="color: #ffcc00; font-size: 14px; font-style: italic; height: 10px;">–í–∞–∂–Ω–æ: –∏—Å—Ç–æ—Ä–∏—è –ø–æ—è–≤–∏—Ç—Å—è –Ω–∞ —Å–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.</p>
        </div>
        <div class="container">
            <form method="post" id="storyForm" enctype="multipart/form-data">
                {{ csrf_input }}
                <div class="story-title-container">
                    <div class="story-title-display placeholder" id="titleDisplay">–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–≤–µ—Å—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫</div>
                    <input type="text" name="title" id="titleInput" class="story-title-input" maxlength="52" placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏—Å—Ç–æ—Ä–∏–∏">
                    <div class="word-counter" id="charCounter">0/52 —Å–∏–º–≤–æ–ª–æ–≤</div>
                </div>
                
                <div class="story-history-container">
                    <div class="story-content-display placeholder" id="contentDisplay">–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–≤–µ—Å—Ç–∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏</div>
                    <div id="contentInput" class="story-content-input" contenteditable="true" placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é –∑–¥–µ—Å—å..."></div>
                    <input type="hidden" name="content" id="hiddenContentInput">
                </div>
                <div class="story-media-info-container">
                <div class="story-media-files" id="mediaToggle">–ú–µ–¥–∏–∞<span id="mediaText">: —Ñ–∞–π–ª—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ —Ñ–µ–π–ª</span></div>
                <div class="file-upload-area" id="fileUploadArea">
                    <div class="file-upload-content">
                        <button class="close-upload-area" id="closeUploadArea">&times;</button>
                        <div class="file-counter" id="fileCounter">0/6 —Ñ–∞–π–ª–æ–≤</div>
                        <label class="file-upload-label">
                            –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª—ã —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞
                            <input type="file" name="media_files" multiple class="file-upload-input" id="fileUploadInput" accept="image/*">
                        </label>
                        <div class="file-preview" id="filePreview"></div>
                    </div>
                </div>
                
                <div class="story-category" id="categoryToggle">–ö–∞—Ç–µ–≥–æ—Ä–∏—è<span id="categoryText">: –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</span></div>
                <div class="category-area" id="categoryArea">
                    <div class="category-content">
                        <button class="close-category-area" id="closeCategoryArea">&times;</button>
                        <div class="category-header">
                            <h3 class="category-title">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</h3>
                            <div class="category-counter" id="categoryCounter">0/3 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</div>
                        </div>
                        <input type="text" class="category-search-box" id="categorySearch" placeholder="–ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...">
                        <div class="category-list-container">
                            <ul class="category-list" id="categoryList">
                                <!-- –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
                            </ul>
                        </div>
                        <input type="hidden" name="categories" id="selectedCategoriesInput">
                        <div class="category-selected-display" id="categorySelectedDisplay">
                            <span class="no-category-selected">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã</span>
                        </div>
                        <div class="category-actions">
                            <button type="button" class="apply-category" id="applyCategoryBtn">–ü—Ä–∏–º–µ–Ω–∏—Ç—å</button>
                        </div>
                    </div>
                </div>
                </div>
                <div class="container-submit">
                    <button type="submit" id="submitButton" disabled>–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å</button>
                </div>
            </form>
        </div>
    </div>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
            const titleDisplay = document.getElementById('titleDisplay');
            const titleInput = document.getElementById('titleInput');
            const charCounter = document.getElementById('charCounter');
            const submitButton = document.getElementById('submitButton');
            const MAX_CHARS = 52;
            
            // –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è
            const contentDisplay = document.getElementById('contentDisplay');
            const contentInput = document.getElementById('contentInput');
            const hiddenContentInput = document.getElementById('hiddenContentInput');
            
            // –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            const categoryToggle = document.getElementById('categoryToggle');
            const categoryArea = document.getElementById('categoryArea');
            const categorySearch = document.getElementById('categorySearch');
            const categoryList = document.getElementById('categoryList');
            const selectedCategoriesInput = document.getElementById('selectedCategoriesInput');
            const categorySelectedDisplay = document.getElementById('categorySelectedDisplay');
            const closeCategoryArea = document.getElementById('closeCategoryArea');
            const applyCategoryBtn = document.getElementById('applyCategoryBtn');
            
            // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            let tempSelectedCategories = [];
            
            // –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Ñ–∞–π–ª–æ–≤
            const mediaToggle = document.getElementById('mediaToggle');
            const fileUploadArea = document.getElementById('fileUploadArea');
            const fileUploadInput = document.getElementById('fileUploadInput');
            const filePreview = document.getElementById('filePreview');
            const closeUploadArea = document.getElementById('closeUploadArea');
            const fileCounter = document.getElementById('fileCounter');
            const MAX_FILES = 6;
            
            // –ú–∞—Å—Å–∏–≤ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö —Ñ–∞–π–ª–æ–≤
            let currentFiles = [];
            
            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è HTML-–∫–æ–¥–∞
            function encodeHtmlEntities(str) {
                return str.replace(/&/g, '&amp;')
                          .replace(/</g, '&lt;')
                          .replace(/>/g, '&gt;')
                          .replace(/"/g, '&quot;')
                          .replace(/'/g, '&#039;');
            }
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É –≤–≤–æ–¥–∞
            contentInput.addEventListener('input', function() {
                const encodedText = encodeHtmlEntities(this.innerHTML);
                if (this.innerHTML !== encodedText) {
                    this.innerHTML = encodedText;
                }
                checkFormValidity();
            });
            
            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
            function checkFormValidity() {
                const titleValue = titleInput.value.trim();
                const contentValue = contentInput.textContent.trim();
                const categoriesValue = selectedCategoriesInput.value;
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –≤—Å–µ –ø–æ–ª—è
                const isTitleValid = titleValue !== '' && titleValue.length <= MAX_CHARS;
                const isContentValid = contentValue !== '';
                const isCategoriesValid = categoriesValue !== '' && categoriesValue.length > 0;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–æ–≥–æ –ø–æ–ª—è
                hiddenContentInput.value = contentInput.innerHTML;
                
                // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∏–ª–∏ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
                submitButton.disabled = !(isTitleValid && isContentValid && isCategoriesValid);
            }
            
            // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞
            function loadCategories() {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞
                const serverCategories = [
                    {% for category in categories %}
                    {
                        id: {{ category.id }},
                        name: "{{ category.name }}"
                    }{% if not loop.last %},{% endif %}
                    {% endfor %}
                ];
                
                renderCategories(serverCategories);
            }
            
            // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            function renderCategories(categories) {
                categoryList.innerHTML = '';
                tempSelectedCategories = [];
                
                // –ü–∞—Ä—Å–∏–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ —Å–∫—Ä—ã—Ç–æ–≥–æ –ø–æ–ª—è
                const savedCategoryIds = selectedCategoriesInput.value ? 
                    selectedCategoriesInput.value.split(',').map(id => parseInt(id)) : [];
                
                categories.forEach(category => {
                    const li = document.createElement('li');
                    li.className = 'category-item';
                    li.textContent = category.name;
                    li.dataset.id = category.id;
                    li.dataset.name = category.name;
                    
                    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
                    if (savedCategoryIds.includes(category.id)) {
                        li.classList.add('selected');
                        tempSelectedCategories.push({ id: category.id, name: category.name });
                    }
                    
                    li.addEventListener('click', function() {
                        // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —É–∂–µ –≤—ã–±—Ä–∞–Ω, –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª—è–µ–º –µ–≥–æ –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö
                        if (li.classList.contains('selected')) {
                            li.classList.remove('selected');
                            tempSelectedCategories = tempSelectedCategories.filter(c => c.id !== category.id);
                            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                            updateCategoryCounter();
                        } 
                        // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω –∏ –≤—ã–±—Ä–∞–Ω–æ –º–µ–Ω—å—à–µ 3 –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
                        else if (tempSelectedCategories.length < 3) {
                            li.classList.add('selected');
                            tempSelectedCategories.push({ id: category.id, name: category.name });
                            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                            updateCategoryCounter();
                        }
                        // –ï—Å–ª–∏ —É–∂–µ –≤—ã–±—Ä–∞–Ω–æ 3 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
                        else {
                            // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ—à–∏–±–∫–∏ (–º–∏–≥–∞—é—â–∏–π –∫—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç)
                            const originalColor = li.style.backgroundColor;
                            li.style.backgroundColor = 'rgba(255, 0, 0, 0.3)';
                            setTimeout(() => {
                                li.style.backgroundColor = originalColor;
                            }, 700);
                            
                            // –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                            categorySelectedDisplay.innerHTML = '<span class="no-category-selected" style="color: #ff6b6b;">–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –º–∞–∫—Å–∏–º—É–º 3 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</span>';
                            setTimeout(() => {
                                updateCategorySelectedDisplay(); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ 1.5 —Å–µ–∫—É–Ω–¥—ã
                            }, 1500);
                        }
                        
                        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–µ—Å–ª–∏ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ)
                        if (tempSelectedCategories.length <= 3) {
                            updateCategorySelectedDisplay();
                        }
                    });
                    
                    categoryList.appendChild(li);
                });
                
                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                updateCategorySelectedDisplay();
            }
            
            // –ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            categorySearch.addEventListener('input', function() {
                const query = this.value.toLowerCase();
                
                // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ (–¥–ª—è –¥–µ–º–æ)
                const allCategories = document.querySelectorAll('.category-item');
                allCategories.forEach(item => {
                    const name = item.textContent.toLowerCase();
                    if (name.includes(query)) {
                        item.style.display = '';
                    } else {
                        item.style.display = 'none';
                    }
                });
                
                // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã AJAX –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É
            });
            
            // –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            categoryToggle.addEventListener('click', function() {
                categoryArea.classList.toggle('visible');
                
                // –ï—Å–ª–∏ –æ–∫–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                if (categoryArea.classList.contains('visible')) {
                    initTempSelectedCategories();
                }
                
                // –ï—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç –∑–∞–≥—Ä—É–∑—á–∏–∫ —Ñ–∞–π–ª–æ–≤, –∑–∞–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ
                fileUploadArea.classList.remove('visible');
            });
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            const categoryText = document.getElementById('categoryText');
            categoryText.addEventListener('click', function(e) {
                // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ, —á—Ç–æ–±—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª –¥–≤–∞–∂–¥—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–æ–¥–∏—Ç–µ–ª—è
                e.stopPropagation();
                // –û—Ç–∫—Ä—ã–≤–∞–µ–º/–∑–∞–∫—Ä—ã–≤–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
                categoryArea.classList.toggle('visible');
                
                // –ï—Å–ª–∏ –æ–∫–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                if (categoryArea.classList.contains('visible')) {
                    initTempSelectedCategories();
                }
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–±–ª–∞—Å—Ç—å –º–µ–¥–∏–∞ –µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç–∞
                fileUploadArea.classList.remove('visible');
            });
            
            // –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤
            mediaToggle.addEventListener('click', function() {
                fileUploadArea.classList.toggle('visible');
                
                // –ï—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –∑–∞–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ
                categoryArea.classList.remove('visible');
            });
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤–Ω—É—Ç—Ä–∏ –º–µ–¥–∏–∞
            const mediaText = document.getElementById('mediaText');
            mediaText.addEventListener('click', function(e) {
                // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ, —á—Ç–æ–±—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª –¥–≤–∞–∂–¥—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–æ–¥–∏—Ç–µ–ª—è
                e.stopPropagation();
                // –û—Ç–∫—Ä—ã–≤–∞–µ–º/–∑–∞–∫—Ä—ã–≤–∞–µ–º –æ–±–ª–∞—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
                fileUploadArea.classList.toggle('visible');
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π –µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç
                categoryArea.classList.remove('visible');
            });
            
            // –ó–∞–∫—Ä—ã—Ç—å –æ–±–ª–∞—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è
            closeUploadArea.addEventListener('click', function(e) {
                e.preventDefault();
                fileUploadArea.classList.remove('visible');
            });
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            function updateCategorySelectedDisplay() {
                if (tempSelectedCategories.length > 0) {
                    const categoryNames = tempSelectedCategories.map(c => c.name).join(', ');
                    const count = tempSelectedCategories.length;
                    const word = count === 1 ? '–∫–∞—Ç–µ–≥–æ—Ä–∏—è' : (count < 5 ? '–∫–∞—Ç–µ–≥–æ—Ä–∏–∏' : '–∫–∞—Ç–µ–≥–æ—Ä–∏–π');
                    categorySelectedDisplay.innerHTML = `<strong>–í—ã–±—Ä–∞–Ω–æ ${count} ${word}:</strong> ${categoryNames}`;
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                    updateCategoryCounter();
                } else {
                    categorySelectedDisplay.innerHTML = '<span class="no-category-selected">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã</span>';
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                    updateCategoryCounter();
                }
            }
            
            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            function updateCategoryCounter() {
                const categoryCounter = document.getElementById('categoryCounter');
                const count = tempSelectedCategories.length;
                categoryCounter.textContent = `${count}/3 ${count === 1 ? '–∫–∞—Ç–µ–≥–æ—Ä–∏—è' : (count < 5 ? '–∫–∞—Ç–µ–≥–æ—Ä–∏–∏' : '–∫–∞—Ç–µ–≥–æ—Ä–∏–π')}`;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ —Å—á–µ—Ç—á–∏–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏
                if (count >= 3) {
                    categoryCounter.className = 'category-counter limit-reached';
                } else if (count >= 2) {
                    categoryCounter.className = 'category-counter limit-close';
                } else {
                    categoryCounter.className = 'category-counter';
                }
            }
            
            // –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
            function updateCategoryText() {
                // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ —ç–ª–µ–º–µ–Ω—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                if (tempSelectedCategories.length > 0) {
                    const count = tempSelectedCategories.length;
                    categoryText.textContent = `: –≤—ã–±—Ä–∞–Ω–æ ${count} ${count === 1 ? '–∫–∞—Ç–µ–≥–æ—Ä–∏—è' : (count < 5 ? '–∫–∞—Ç–µ–≥–æ—Ä–∏–∏' : '–∫–∞—Ç–µ–≥–æ—Ä–∏–π')}`;
                } else {
                    categoryText.textContent = ': –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏';
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º—ã
                checkFormValidity();
            }
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            function initTempSelectedCategories() {
                // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ ID –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                const savedCategoryIds = selectedCategoriesInput.value ? 
                    selectedCategoriesInput.value.split(',').map(id => parseInt(id)) : [];
                
                // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 3 –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –µ—Å–ª–∏ –∏—Ö –±–æ–ª—å—à–µ
                const limitedCategoryIds = savedCategoryIds.slice(0, 3);
                
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤
                tempSelectedCategories = [];
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞
                document.querySelectorAll('.category-item').forEach(item => {
                    const itemId = parseInt(item.dataset.id);
                    if (limitedCategoryIds.includes(itemId)) {
                        item.classList.add('selected');
                        tempSelectedCategories.push({ 
                            id: itemId, 
                            name: item.dataset.name 
                        });
                    } else {
                        item.classList.remove('selected');
                    }
                });
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                updateCategorySelectedDisplay();
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                updateCategoryCounter();
            }
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            closeCategoryArea.addEventListener('click', function(e) {
                e.preventDefault();
                
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                initTempSelectedCategories();
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                categoryArea.classList.remove('visible');
            });
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–∏–º–µ–Ω–∏—Ç—å"
            applyCategoryBtn.addEventListener('click', function() {
                if (tempSelectedCategories.length > 0) {
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    selectedCategoriesInput.value = tempSelectedCategories.map(c => c.id).join(',');
                    updateCategoryText();
                } else {
                    // –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã, –æ—á–∏—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
                    selectedCategoriesInput.value = '';
                    updateCategoryText();
                }
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                categoryArea.classList.remove('visible');
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º—ã
                checkFormValidity();
            });
            
            // –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
            fileUploadInput.addEventListener('change', handleFileUpload);
            
            // Drag & Drop –¥–ª—è —Ñ–∞–π–ª–æ–≤
            const fileUploadLabel = document.querySelector('.file-upload-label');
            
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                fileUploadLabel.addEventListener(eventName, preventDefaults, false);
            });
            
            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }
            
            ['dragenter', 'dragover'].forEach(eventName => {
                fileUploadLabel.addEventListener('dragenter', highlight, false);
            });
            
            ['dragleave', 'drop'].forEach(eventName => {
                fileUploadLabel.addEventListener(eventName, unhighlight, false);
            });
            
            function highlight() {
                fileUploadLabel.classList.add('highlight');
                fileUploadLabel.style.backgroundColor = 'rgba(255, 255, 255, 0.3)';
                fileUploadLabel.style.borderColor = '#99ff8b';
            }
            
            function unhighlight() {
                fileUploadLabel.classList.remove('highlight');
                fileUploadLabel.style.backgroundColor = 'rgba(255, 255, 255, 0.1)';
                fileUploadLabel.style.borderColor = 'white';
            }
            
            fileUploadLabel.addEventListener('drop', handleDrop, false);
            
            function handleDrop(e) {
                const dt = e.dataTransfer;
                const droppedFiles = dt.files;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
                if (droppedFiles.length > 0) {
                    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º FileList –≤ –º–∞—Å—Å–∏–≤ –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    const newFilesArray = Array.from(droppedFiles).filter(file => file.type.startsWith('image/'));
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏ –ª–∏–º–∏—Ç
                    if (currentFiles.length + newFilesArray.length > MAX_FILES) {
                        
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤, —Å–∫–æ–ª—å–∫–æ –ø–æ–º–µ—â–∞–µ—Ç—Å—è –≤ –ª–∏–º–∏—Ç
                        const availableSlots = MAX_FILES - currentFiles.length;
                        if (availableSlots > 0) {
                            currentFiles = [...currentFiles, ...newFilesArray.slice(0, availableSlots)];
                        }
                    } else {
                        currentFiles = [...currentFiles, ...newFilesArray];
                    }
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                    updateFilePreview();
                }
            }
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
            function handleFileUpload() {
                const files = fileUploadInput.files;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
                if (files.length > 0) {
                    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º FileList –≤ –º–∞—Å—Å–∏–≤ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã
                    const newFilesArray = Array.from(files).filter(file => file.type.startsWith('image/'));
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç —Ñ–∞–π–ª–æ–≤
                    if (currentFiles.length + newFilesArray.length > MAX_FILES) {
                       
                        
                        // –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤, —Å–∫–æ–ª—å–∫–æ –ø–æ–º–µ—â–∞–µ—Ç—Å—è –≤ –ª–∏–º–∏—Ç
                        const availableSlots = MAX_FILES - currentFiles.length;
                        if (availableSlots > 0) {
                            currentFiles = [...currentFiles, ...newFilesArray.slice(0, availableSlots)];
                        }
                    } else {
                        currentFiles = [...currentFiles, ...newFilesArray];
                    }
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                    updateFilePreview();
                }
            }
            
            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–µ–≤—å—é —Ñ–∞–π–ª–æ–≤
            function updateFilePreview() {
                // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–µ–µ –ø—Ä–µ–≤—å—é
                filePreview.innerHTML = '';
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —Ñ–∞–π–ª–æ–≤
                updateFileCounter();
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏ –ª–∏–º–∏—Ç
                if (currentFiles.length >= MAX_FILES) {
                    fileUploadInput.disabled = true;
                } else {
                    fileUploadInput.disabled = false;
                }
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ –º–µ–¥–∏–∞-–ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ
                if (currentFiles.length > 0) {
                    mediaText.textContent = `: ${currentFiles.length} —Ñ–∞–π–ª(–æ–≤)`;
                } else {
                    mediaText.textContent = ': —Ñ–∞–π–ª—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ —Ñ–µ–π–ª';
                }
                
                // –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–≤—å—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
                currentFiles.forEach((file, index) => {
                    const reader = new FileReader();
                    
                    reader.onload = function(e) {
                        const previewItem = document.createElement('div');
                        previewItem.className = 'file-preview-item';
                        
                        // –î–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–≤—å—é
                        if (file.type.startsWith('image/')) {
                            const img = document.createElement('img');
                            img.src = e.target.result;
                            previewItem.appendChild(img);
                        } else {
                            // –î–ª—è –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
                            previewItem.textContent = file.name;
                        }
                        
                        // –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
                        const removeBtn = document.createElement('span');
                        removeBtn.className = 'remove-file';
                        removeBtn.innerHTML = '&times;';
                        removeBtn.addEventListener('click', function(e) {
                            e.stopPropagation();
                            
                            // –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∑ –º–∞—Å—Å–∏–≤–∞
                            currentFiles.splice(index, 1);
                            updateFilePreview();
                        });
                        
                        previewItem.appendChild(removeBtn);
                        filePreview.appendChild(previewItem);
                    };
                    
                    reader.readAsDataURL(file);
                });
                
                // –°–æ–∑–¥–∞–µ–º –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –Ω–æ–≤—ã–π DataTransfer –æ–±—ä–µ–∫—Ç –∫ input
                updateFileInput();
            }
            
            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ —Ñ–∞–π–ª–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞
            function updateFileInput() {
                try {
                    const dataTransfer = new DataTransfer();
                    currentFiles.forEach(file => {
                        dataTransfer.items.add(file);
                    });
                    fileUploadInput.files = dataTransfer.files;
                    console.log("Files updated:", fileUploadInput.files.length, "files ready for upload");
                } catch (e) {
                    console.error("Error updating file input:", e);
                }
            }
            
            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ —Ñ–∞–π–ª–æ–≤
            function updateFileCounter() {
                fileCounter.textContent = `${currentFiles.length}/${MAX_FILES} —Ñ–∞–π–ª–æ–≤`;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ —Å—á–µ—Ç—á–∏–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏
                if (currentFiles.length >= MAX_FILES) {
                    fileCounter.className = 'file-counter limit-reached';
                } else if (currentFiles.length >= MAX_FILES * 0.7) {
                    fileCounter.className = 'file-counter limit-close';
                } else {
                    fileCounter.className = 'file-counter';
                }
            }
            
            // === –õ–æ–≥–∏–∫–∞ –¥–ª—è —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ ===
            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ HTML-—Ç–µ–≥–æ–≤
            function stripHtml(html) {
                const tmp = document.createElement('div');
                tmp.innerHTML = html;
                return tmp.textContent || tmp.innerText || '';
            }

            // –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π div –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Ç–µ–∫—Å—Ç
            contentDisplay.addEventListener('click', function() {
                contentDisplay.style.display = 'none';
                contentInput.style.display = 'block';
                contentInput.focus();
            });
            
            // –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—é —Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞
            contentInput.addEventListener('blur', function() {
                // –û—á–∏—â–∞–µ–º HTML-—Ç–µ–≥–∏ –ø–µ—Ä–µ–¥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
                const cleanText = stripHtml(this.innerHTML);
                if (cleanText.trim() !== '') {
                    contentDisplay.textContent = cleanText;
                    contentDisplay.classList.remove('placeholder');
                    contentInput.style.display = 'none';
                    contentDisplay.style.display = 'block';
                } else {
                    contentDisplay.textContent = '–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–≤–µ—Å—Ç–∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏';
                    contentDisplay.classList.add('placeholder');
                    contentInput.style.display = 'none';
                    contentDisplay.style.display = 'block';
                }
                
                checkFormValidity();
            });
            
            // === –õ–æ–≥–∏–∫–∞ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ ===
            // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Ç–µ–∫—Å—Ç
            titleDisplay.addEventListener('click', function() {
                titleDisplay.style.display = 'none';
                titleInput.style.display = 'block';
                titleInput.focus();
            });
            
            // –û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç –∏ —Å—á–µ—Ç—á–∏–∫ —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤–≤–æ–¥–∞
            titleInput.addEventListener('input', function() {
                const charCount = titleInput.value.length;
                charCounter.textContent = charCount + '/' + MAX_CHARS + ' —Å–∏–º–≤–æ–ª–æ–≤';
                
                // –ò–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç —Å—á–µ—Ç—á–∏–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–∏ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏ –∫ –ª–∏–º–∏—Ç—É
                if (charCount >= MAX_CHARS) {
                    charCounter.className = 'word-counter limit-reached';
                } else if (charCount >= MAX_CHARS * 0.8) {
                    charCounter.className = 'word-counter limit-close';
                } else {
                    charCounter.className = 'word-counter';
                }
                
                checkFormValidity();
            });
            
            // –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—é —Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞
            titleInput.addEventListener('blur', function() {
                titleInput.style.display = 'none';
                titleDisplay.style.display = 'block';
                
                if (titleInput.value.trim() !== '') {
                    titleDisplay.textContent = titleInput.value;
                    titleDisplay.classList.remove('placeholder');
                } else {
                    titleDisplay.textContent = '–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤–≤–µ—Å—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫';
                    titleDisplay.classList.add('placeholder');
                }
                
                checkFormValidity();
            });
            
            // –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–∂–∞—Ç–∏–µ Enter
            titleInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    titleInput.blur();
                }
            });
            
            // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
            document.getElementById('storyForm').addEventListener('submit', function(e) {
                e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã
                
                const charCount = titleInput.value.length;
                const contentValue = contentInput.textContent.trim();
                const categoriesValue = selectedCategoriesInput.value;
                
                // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å –æ—à–∏–±–∫–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                categoryToggle.classList.remove('error');
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
                hiddenContentInput.value = contentInput.innerHTML;
                
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
                if (charCount > MAX_CHARS || charCount === 0) {
                    titleDisplay.click();
                    return;
                } else if (contentValue === '') {
                    contentDisplay.click();
                    return;
                } else if (!categoriesValue || categoriesValue === '') {
                    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –æ—à–∏–±–∫–∏ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    categoryToggle.classList.add('error');
                    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                    categoryToggle.click();
                    
                    // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å –æ—à–∏–±–∫–∏ —á–µ—Ä–µ–∑ 1.5 —Å–µ–∫—É–Ω–¥—ã
                    setTimeout(() => {
                        categoryToggle.classList.remove('error');
                    }, 1500);
                    return;
                }
                
                // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
                const form = document.getElementById('storyForm');
                const formData = new FormData(form);
                
                // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –∏–∑ —Ñ–æ—Ä–º—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
                if (formData.has('media_files')) {
                    formData.delete('media_files');
                }
                
                // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–µ MAX_FILES —Ñ–∞–π–ª–æ–≤ –≤ —Ñ–æ—Ä–º—É
                const filesToUpload = currentFiles.slice(0, MAX_FILES);
                filesToUpload.forEach(file => {
                    formData.append('media_files', file);
                });
                
                // –í—ã–≤–æ–¥–∏–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                console.log(`–û—Ç–ø—Ä–∞–≤–ª—è–µ–º ${filesToUpload.length} –∏–∑ ${currentFiles.length} —Ñ–∞–π–ª–æ–≤`);
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É —Å –ø–æ–º–æ—â—å—é fetch API
                fetch(form.action, {
                    method: 'POST',
                    body: formData,
                    credentials: 'same-origin' // –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Å—Å–∏—è–º–∏ –∏ CSRF
                })
                .then(response => {
                    if (response.redirected) {
                        // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç (–æ–±—ã—á–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏)
                        window.location.href = response.url;
                    } else {
                        return response.text().then(html => {
                            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
                            if (response.ok) {
                                // –£—Å–ø–µ—à–Ω–æ, –Ω–æ –±–µ–∑ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                                window.location.reload();
                            } else {
                                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                              
                                console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', html);
                            }
                        });
                    }
                })
                .catch(error => {
                    
                    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
                });
            });
            
            // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            loadCategories();
            
            // –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫
            updateCategoryCounter();
            
            // –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—ã–ø–∞–¥–∞—é—â–∏—Ö –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –∏—Ö
            document.addEventListener('click', function(e) {
                if (!categoryArea.contains(e.target) && e.target !== categoryToggle) {
                    categoryArea.classList.remove('visible');
                }
                
                // –î–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–±–ª–∞—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –≤–Ω–µ—à–Ω—é—é –æ–±–ª–∞—Å—Ç—å
                if (fileUploadArea.classList.contains('visible') && 
                    e.target === fileUploadArea && 
                    !e.target.closest('.file-upload-content')) {
                    fileUploadArea.classList.remove('visible');
                }
            });
            
            // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è —Å –æ–±–ª–∞—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏
            document.querySelector('.file-upload-content').addEventListener('click', function(e) {
                e.stopPropagation();
            });
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–∞ —Ñ–∞–π–ª–æ–≤
            updateFileCounter();
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à Escape –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    categoryArea.classList.remove('visible');
                    fileUploadArea.classList.remove('visible');
                }
            });
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ñ–æ—Ä–º—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            checkFormValidity();
        });
    </script>
{% endblock %}
